{
  parserClass="com.simpleplugin.parser.SimpleParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Simple"
  psiImplClassSuffix="Impl"
  psiPackage="com.simpleplugin.psi"
  psiImplPackage="com.simpleplugin.psi.impl"

  elementTypeHolderClass="com.simpleplugin.psi.SimpleTypes"
  elementTypeClass="com.simpleplugin.psi.SimpleElementType"
  tokenTypeClass="com.simpleplugin.psi.SimpleTokenType"

  tokens=[
      LP='('
      RP=')'

      //number='regexp:\d+(\.\d*)?'
      digit='regexp:[0-9]'
      comment='regexp://.*'
      crlf='regexp:\n|\r|\r\n'
      words='regexp:[a-z ]+'

      op_1='+'
      op_2='-'
      op_3='*'
      op_4='/'

      keyword_1="define:"
      keyword_2="site:"
      keyword_3="links:"

  ]

  name(".*expr")='expression'
  extends(".*expr")=expr
}

simpleFile ::= number // item_*

private item_ ::= (expr|comment|crlf|query)

expr ::= factor plus_expr *
left plus_expr ::= plus_op factor
private plus_op ::= '+'|'-'
private factor ::= primary mul_expr *
left mul_expr  ::= mul_op primary
private mul_op ::= '*'|'/'
private primary ::= primary_inner
private primary_inner ::= literal_expr | paren_expr
paren_expr ::= '(' expr ')'
literal_expr ::= number

query ::= keyword words
private keyword ::= "define:" | "site:" | "links:"

number ::= digit {digit} *